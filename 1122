#!/bin/bash

#set localtime
#ln -fs /usr/share/zoneinfo/Asia/Manila /etc/localtime

#####################
### Configuration ###
#####################
VPN_Owner='My VPN';
VPN_Name='MyVPN';
Filename_alias='myvpn';

### Added Server ports
Socks_port='80';
SSH_viaAuto='666';
Socks2_port='667';
Socks3_port='668';

### Default Server ports, Please dont change this area
OpenVPN_TCP_Port='110';
OpenVPN_UDP_Port='25222';
OpenVPN_TCP_EC='25980';
OpenVPN_UDP_EC='25985';
OpenVPN_TCP_OHP='8087';
OpenVPN_OHP_EC='8088';
Dropbear_OHP='8085';
SSH_viaOHP='8086';
SSH_Extra_Port='22';
SSH_Extra_Port='225';
Squid_Proxy_1='8000';
Squid_Proxy_2='8080';
SSL_viaOpenSSH1='443';
SSL_viaOpenSSH2='444';
Dropbear_Port1='550';
Dropbear_Port2='555';

function ip_address(){
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( curl -4 -s ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( curl -4 -s ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
MYIP=$(ip_address)

mkdir /etc/openvpn/script
chmod -R 755 /etc/openvpn/script
mkdir /var/www/html/stat
chmod -R 755 /var/www/html/stat

clear
echo -e "
                                                         
";
echo -e " To exit the script, kindly Press \e[1;32mCRTL\e[0m key together with \e[1;32mC\e[0m"
echo -e ""
echo -e " Are You Sure You Want To Install?:"
echo -e " [1] Yes"
until [[ "$opts" =~ ^[1]$ ]]; do
read -rp " Choose from [1]: " -e opts
done

#installing important files

#installing ohp
wget https://github.com/lfasmpao/open-http-puncher/releases/download/0.1/ohpserver-linux32.zip
unzip ohpserver-linux32.zip
chmod 755 ohpserver
sudo mv ohpserver /usr/local/bin/

#Adding Socks
wget -O /home/proxydirect.py "http://firenetvpn.net/files/socks1"

sed -i "s|Socks_port|$Socks_port|g" "/home/proxydirect.py"
sed -i "s|SSH_Extra_Port|$SSH_Extra_Port|g" "/home/proxydirect.py"
sed -i "s|VPN_Name|$VPN_Name|g" "/home/proxydirect.py"
sed -i "s|OpenVPN_TCP_Port|$OpenVPN_TCP_Port|g" "/home/proxydirect.py"

#Adding Autorecon Socks 
wget -O /home/proxydirect2.py "http://firenetvpn.net/files/socks2"

sed -i "s|Socks2_port|$Socks2_port|g" "/home/proxydirect2.py"
sed -i "s|SSH_Extra_Port|$SSH_Extra_Port|g" "/home/proxydirect2.py"
sed -i "s|VPN_Name|$VPN_Name|g" "/home/proxydirect2.py"
sed -i "s|OpenVPN_TCP_Port|$OpenVPN_TCP_Port|g" "/home/proxydirect2.py"

#Adding OVPN Autorecon Socks 
wget -O /home/proxydirect3.py "http://firenetvpn.net/files/socks3"

sed -i "s|Socks3_port|$Socks3_port|g" "/home/proxydirect3.py"
sed -i "s|SSH_Extra_Port|$SSH_Extra_Port|g" "/home/proxydirect3.py"
sed -i "s|VPN_Name|$VPN_Name|g" "/home/proxydirect3.py"
sed -i "s|OpenVPN_TCP_Port|$OpenVPN_TCP_Port|g" "/home/proxydirect3.py"

cat <<'socks' > /etc/systemd/system/socks.service
[Unit]
Description=Daemonize socks

[Service]
Type=simple
ExecStart=/usr/bin/python /home/proxydirect.py

[Install]
WantedBy=multi-user.target
socks

#adding autorecon
cat <<'ohpssh2' > /etc/systemd/system/ohplenz.service
[Unit]
Description=Daemonize OpenHTTP Puncher Autorecon
Wants=network.target
After=network.target

[Service]
ExecStart=/usr/local/bin/ohpserver -port SSH_viaAuto -proxy 127.0.0.1:Squid_Proxy_2 -tunnel IP-ADDRESS:SSH_Extra_Port
Restart=always
RestartSec=3
[Install]
WantedBy=multi-user.target
ohpssh2

sed -i "s|SSH_viaAuto|$SSH_viaAuto|g" "/etc/systemd/system/ohplenz.service"
sed -i "s|Squid_Proxy_2|$Squid_Proxy_2|g" "/etc/systemd/system/ohplenz.service"
sed -i "s|IP-ADDRESS|$MYIP|g" "/etc/systemd/system/ohplenz.service"
sed -i "s|SSH_Extra_Port|$SSH_Extra_Port|g" "/etc/systemd/system/ohplenz.service"

#adding autorecon socks
cat <<'socks1' > /etc/systemd/system/sockslenz.service
[Unit]
Description=Daemonize Socks Autorecon
Wants=network.target
After=network.target

[Service]
ExecStart=/usr/bin/python /home/proxydirect2.py
Restart=always
RestartSec=3
[Install]
WantedBy=multi-user.target
socks1

#adding ovpn autorecon socks
cat <<'socks2' > /etc/systemd/system/sockslenz2.service
[Unit]
Description=Daemonize Socks Autorecon
Wants=network.target
After=network.target

[Service]
ExecStart=/usr/bin/python /home/proxydirect3.py
Restart=always
RestartSec=3
[Install]
WantedBy=multi-user.target
socks2

systemctl daemon-reload
systemctl start socks
systemctl enable socks
systemctl start ohplenz
systemctl enable ohplenz
systemctl start sockslenz
systemctl enable sockslenz
systemctl start sockslenz2
systemctl enable sockslenz2

#creating autorecon script
cat <<'autorecon' > /home/lenz
sudo systemctl restart ohplenz
sudo systemctl restart sockslenz
sudo systemctl restart sockslenz2
sleep 60
sudo systemctl restart ohplenz
sudo systemctl restart sockslenz
sudo systemctl restart sockslenz2

autorecon

#adding autorecon cron
cat <<'autorecon2' > /etc/cron.d/autorecon
*/2 *   * * *   root    bash /home/lenz
autorecon2

cat <<'Ovpn01' > "/var/www/openvpn/tcp-default.ovpn"
## VPN_Name Server
## Config by VPN_Owner

client
dev tun
persist-tun
proto tcp
remote IP-ADDRESS OpenVPN_TCP_Port
http-proxy IP-ADDRESS Squid_Proxy_1
persist-remote-ip
resolv-retry infinite
connect-retry 0 1
remote-cert-tls server
nobind
reneg-sec 0
keysize 0
rcvbuf 0
sndbuf 0
verb 2
comp-lzo
auth none
auth-nocache
cipher none
setenv CLIENT_CERT 0
auth-user-pass
Ovpn01

sed -i "s|VPN_Name|$VPN_Name|g" "/var/www/openvpn/tcp-default.ovpn"
sed -i "s|VPN_Owner|$VPN_Owner|g" "/var/www/openvpn/tcp-default.ovpn"
sed -i "s|IP-ADDRESS|$MYIP|g" "/var/www/openvpn/tcp-default.ovpn"
sed -i "s|OpenVPN_TCP_Port|$OpenVPN_TCP_Port|g" "/var/www/openvpn/tcp-default.ovpn"
sed -i "s|Squid_Proxy_1|$Squid_Proxy_1|g" "/var/www/openvpn/tcp-default.ovpn"
echo -e "<ca>\n$(cat /etc/openvpn/ca.crt)\n</ca>" >> "/var/www/openvpn/tcp-default.ovpn"

cat <<'Ovpn02' > "/var/www/openvpn/tcp-ec.ovpn"
## VPN_Name Server
## Config by VPN_Owner

client
dev tun
persist-tun
proto tcp
remote IP-ADDRESS OpenVPN_TCP_EC
http-proxy IP-ADDRESS Squid_Proxy_1
persist-remote-ip
resolv-retry infinite
connect-retry 0 1
remote-cert-tls server
nobind
reneg-sec 0
keysize 0
rcvbuf 0
sndbuf 0
verb 2
comp-lzo
auth none
auth-nocache
cipher none
setenv CLIENT_CERT 0
tls-client
tls-version-min 1.2
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256
auth-user-pass
Ovpn02

sed -i "s|VPN_Name|$VPN_Name|g" "/var/www/openvpn/tcp-ec.ovpn"
sed -i "s|VPN_Owner|$VPN_Owner|g" "/var/www/openvpn/tcp-ec.ovpn"
sed -i "s|IP-ADDRESS|$MYIP|g" "/var/www/openvpn/tcp-ec.ovpn"
sed -i "s|OpenVPN_TCP_EC|$OpenVPN_TCP_EC|g" "/var/www/openvpn/tcp-ec.ovpn"
sed -i "s|Squid_Proxy_1|$Squid_Proxy_1|g" "/var/www/openvpn/tcp-ec.ovpn"
echo -e "<ca>\n$(cat /etc/openvpn/ca.crt)\n</ca>" >> "/var/www/openvpn/tcp-ec.ovpn"

cat <<'Ovpn03' > "/var/www/openvpn/tcp-ohp.ovpn"
## VPN_Name Server
## Config by VPN_Owner

client
dev tun
persist-tun
proto tcp

# We can play this one, put any host on the line
# remote anyhost.com anyport
# remote www.google.com.ph 443
#
# We can also play with CRLFs
#remote "HEAD https://ajax.googleapis.com HTTP/1.1/r/n/r/n"
# Every types of Broken remote line setups/crlfs/payload are accepted, just put them inside of double-quotes
remote "https://www.firenetph.com"
## use this line to modify OpenVPN remote port (this will serve as our fake ovpn port)
port 443

# This proxy uses as our main forwarder for OpenVPN tunnel.
http-proxy IP-ADDRESS OpenVPN_TCP_OHP

# We can also play our request headers here, everything are accepted, put them inside of a double-quotes.
http-proxy-option VERSION 1.1
http-proxy-option CUSTOM-HEADER ""
http-proxy-option CUSTOM-HEADER "Host: www.firenetph.com%2F"
http-proxy-option CUSTOM-HEADER "X-Forwarded-Host: www.digicert.net%2F"
http-proxy-option CUSTOM-HEADER ""

persist-remote-ip
resolv-retry infinite
connect-retry 0 1
remote-cert-tls server
nobind
reneg-sec 0
keysize 0
rcvbuf 0
sndbuf 0
verb 2
comp-lzo
auth none
auth-nocache
cipher none
setenv CLIENT_CERT 0
auth-user-pass
Ovpn03

sed -i "s|VPN_Name|$VPN_Name|g" "/var/www/openvpn/tcp-ohp.ovpn"
sed -i "s|VPN_Owner|$VPN_Owner|g" "/var/www/openvpn/tcp-ohp.ovpn"
sed -i "s|IP-ADDRESS|$MYIP|g" "/var/www/openvpn/tcp-ohp.ovpn"
sed -i "s|OpenVPN_TCP_OHP|$OpenVPN_TCP_OHP|g" "/var/www/openvpn/tcp-ohp.ovpn"
echo -e "<ca>\n$(cat /etc/openvpn/ca.crt)\n</ca>" >> "/var/www/openvpn/tcp-ohp.ovpn"

cat <<'Ovpn04' > "/var/www/openvpn/tcp-ec-ohp.ovpn"
## VPN_Name Server
## Config by VPN_Owner

client
dev tun
persist-tun
proto tcp

# We can play this one, put any host on the line
# remote anyhost.com anyport
# remote www.google.com.ph 443
#
# We can also play with CRLFs
#remote "HEAD https://ajax.googleapis.com HTTP/1.1/r/n/r/n"
# Every types of Broken remote line setups/crlfs/payload are accepted, just put them inside of double-quotes
remote "https://www.firenetph.com"
## use this line to modify OpenVPN remote port (this will serve as our fake ovpn port)
port 443

# This proxy uses as our main forwarder for OpenVPN tunnel.
http-proxy IP-ADDRESS OpenVPN_OHP_EC

# We can also play our request headers here, everything are accepted, put them inside of a double-quotes.
http-proxy-option VERSION 1.1
http-proxy-option CUSTOM-HEADER ""
http-proxy-option CUSTOM-HEADER "Host: www.firenetph.com%2F"
http-proxy-option CUSTOM-HEADER "X-Forwarded-Host: www.digicert.net%2F"
http-proxy-option CUSTOM-HEADER ""

persist-remote-ip
resolv-retry infinite
connect-retry 0 1
remote-cert-tls server
nobind
reneg-sec 0
keysize 0
rcvbuf 0
sndbuf 0
verb 2
comp-lzo
auth none
auth-nocache
cipher none
setenv CLIENT_CERT 0
tls-client
tls-version-min 1.2
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256
auth-user-pass
Ovpn04

sed -i "s|VPN_Name|$VPN_Name|g" "/var/www/openvpn/tcp-ec-ohp.ovpn"
sed -i "s|VPN_Owner|$VPN_Owner|g" "/var/www/openvpn/tcp-ec-ohp.ovpn"
sed -i "s|IP-ADDRESS|$MYIP|g" "/var/www/openvpn/tcp-ec-ohp.ovpn"
sed -i "s|OpenVPN_OHP_EC|$OpenVPN_OHP_EC|g" "/var/www/openvpn/tcp-ec-ohp.ovpn"
echo -e "<ca>\n$(cat /etc/openvpn/ca.crt)\n</ca>" >> "/var/www/openvpn/tcp-ec-ohp.ovpn"

cat <<'Ovpn05' > "/var/www/openvpn/udp-default.ovpn"
## VPN_Name Server
## Config by VPN_Owner

client
dev tun
persist-tun
proto udp
remote IP-ADDRESS OpenVPN_UDP_Port
persist-remote-ip
resolv-retry infinite
connect-retry 0 1
remote-cert-tls server
nobind
float
fast-io
reneg-sec 0
keysize 0
rcvbuf 0
sndbuf 0
verb 2
comp-lzo
auth none
auth-nocache
cipher none
setenv CLIENT_CERT 0
auth-user-pass
Ovpn05

sed -i "s|VPN_Name|$VPN_Name|g" "/var/www/openvpn/udp-default.ovpn"
sed -i "s|VPN_Owner|$VPN_Owner|g" "/var/www/openvpn/udp-default.ovpn"
sed -i "s|IP-ADDRESS|$MYIP|g" "/var/www/openvpn/udp-default.ovpn"
sed -i "s|OpenVPN_UDP_Port|$OpenVPN_UDP_Port|g" "/var/www/openvpn/udp-default.ovpn"
echo -e "<ca>\n$(cat /etc/openvpn/ca.crt)\n</ca>" >> "/var/www/openvpn/udp-default.ovpn"

cat <<'Ovpn06' > "/var/www/openvpn/udp-ec.ovpn"
## VPN_Name Server
## Config by VPN_Owner

client
dev tun
persist-tun
proto udp
remote IP-ADDRESS OpenVPN_UDP_EC
persist-remote-ip
resolv-retry infinite
connect-retry 0 1
remote-cert-tls server
nobind
float
fast-io
reneg-sec 0
keysize 0
rcvbuf 0
sndbuf 0
verb 2
comp-lzo
auth none
auth-nocache
cipher none
setenv CLIENT_CERT 0
tls-client
tls-version-min 1.2
tls-cipher TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256
auth-user-pass
Ovpn06

sed -i "s|VPN_Name|$VPN_Name|g" "/var/www/openvpn/udp-ec.ovpn"
sed -i "s|VPN_Owner|$VPN_Owner|g" "/var/www/openvpn/udp-ec.ovpn"
sed -i "s|IP-ADDRESS|$MYIP|g" "/var/www/openvpn/udp-ec.ovpn"
sed -i "s|OpenVPN_UDP_EC|$OpenVPN_UDP_EC|g" "/var/www/openvpn/udp-ec.ovpn"
echo -e "<ca>\n$(cat /etc/openvpn/ca.crt)\n</ca>" >> "/var/www/openvpn/udp-ec.ovpn"

#Modifying Config Page
wget -O /var/www/openvpn/index.html "http://firenetvpn.net/files/download"

sed -i "s|IP-ADDRESS|$MYIP|g" "/var/www/openvpn/index.html"

#Banner, MOTD, issue
cat <<'BANNER' >/etc/banner
<br>
==========================
<br><font color=red size=7><b>WARNING</b></font>
<br>
<br><font color=red size=7><b>NOT FOLLOWING THE RULES WILL BE FREEZED/BANNED ACCOUNT INTO OUR DATABASE</b></font>
<br>
==========================
<br>
<i><font color='red'>- NO SPAMMING !!!</br></font></i>
<br><i><font color='red'>- NO DDOS !!!</br></font></i>
<br><i><font color='red'>- NO HACKING !!!</br></font></i>
<br><i><font color='red'>- NO CARDING !!!</br></font></i>
<br><i><font color='red'>- NO DUAL-LOGIN !!!</br></font></i>
<br><i><font color='red'>- NO TORRENT !!!</i></br></font></i>
<br>
==========================
<br>
<font color=red size=7><b>VPN_Owner</b></font>
<br>
==========================
<br>
BANNER

cat <<'MOTD' >/etc/motd
<br>
==========================
<br><font color=red size=7><b>WARNING</b></font>
<br>
<br><font color=red size=7><b>NOT FOLLOWING THE RULES WILL BE FREEZED/BANNED ACCOUNT INTO OUR DATABASE</b></font>
<br>
==========================
<br>
<i><font color='red'>- NO SPAMMING !!!</br></font></i>
<br><i><font color='red'>- NO DDOS !!!</br></font></i>
<br><i><font color='red'>- NO HACKING !!!</br></font></i>
<br><i><font color='red'>- NO CARDING !!!</br></font></i>
<br><i><font color='red'>- NO DUAL-LOGIN !!!</br></font></i>
<br><i><font color='red'>- NO TORRENT !!!</i></br></font></i>
<br>
==========================
<br>
<font color=red size=7><b>VPN_Owner</b></font>
<br>
==========================
<br>
MOTD

cat <<'ISSUE' >/etc/issue.net
<br>
==========================
<br><font color=red size=7><b>WARNING</b></font>
<br>
<br><font color=red size=7><b>NOT FOLLOWING THE RULES WILL BE FREEZED/BANNED ACCOUNT INTO OUR DATABASE</b></font>
<br>
==========================
<br>
<i><font color='red'>- NO SPAMMING !!!</br></font></i>
<br><i><font color='red'>- NO DDOS !!!</br></font></i>
<br><i><font color='red'>- NO HACKING !!!</br></font></i>
<br><i><font color='red'>- NO CARDING !!!</br></font></i>
<br><i><font color='red'>- NO DUAL-LOGIN !!!</br></font></i>
<br><i><font color='red'>- NO TORRENT !!!</i></br></font></i>
<br>
==========================
<br>
<font color=red size=7><b>VPN_Owner</b></font>
<br>
==========================
<br>
ISSUE

sed -i "s|VPN_Owner|$VPN_Owner|g" "/etc/banner"
sed -i "s|VPN_Owner|$VPN_Owner|g" "/etc/motd"
sed -i "s|VPN_Owner|$VPN_Owner|g" "/etc/issue.net"

#Deleting patch file
cd
rm -rf *
clear

echo "
############################################################
# SERVER INFO:
# SSH Server: $SSH_Extra_Port                              
# SSH via OHP: $SSH_viaOHP                                 
# Socks Port: $Socks_port                                  
# Socks Port(Autorecon): $Socks2_port            
# Socks Port OVPN-TCP(Autorecon): $Socks3_port     
# SSH via OHP(Autorecon): $SSH_viaAuto                     
# SSL Server Port: $SSL_viaOpenSSH1, $SSL_viaOpenSSH2                         
# Dropbear Port: $Dropbear_Port1, $Dropbear_Port2 
# Dropbear via OHP: $Dropbear_OHP
# OpenVPN Server (TCP): $OpenVPN_TCP_Port                  
# OpenVPN Server (UDP): $OpenVPN_UDP_Port  
# OpenVPN Server (TCP EC): $OpenVPN_TCP_EC
# OpenVPN Server (UDP EC): $OpenVPN_UDP_EC
# OpenVPN Server (TCP OHP): $OpenVPN_TCP_OHP
# Squid Proxy Server: $Squid_Proxy_1, $Squid_Proxy_2       
# OpenVPN Config: http://$(curl -4s http://ipinfo.io/ip):86
#
# Michael Patch Script v1.1        
# Authentication file system                
# Setup by: Al-amin             
#
############################################################";

echo '
                                     
';

echo 'rebooting....';
sleep 5
reboot
